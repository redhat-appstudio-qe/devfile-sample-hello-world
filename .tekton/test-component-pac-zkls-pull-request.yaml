typemeta:
  kind: PipelineRun
  apiversion: tekton.dev/v1beta1
objectmeta:
  name: test-component-pac-zkls-on-pull-request
  generatename: ""
  namespace: build-e2e-jxhb
  selflink: ""
  uid: ""
  resourceversion: ""
  generation: 0
  creationtimestamp: "0001-01-01T00:00:00Z"
  deletiontimestamp: null
  deletiongraceperiodseconds: null
  labels:
    appstudio.openshift.io/application: build-suite-test-application-bfdk
    appstudio.openshift.io/component: test-component-pac-zkls
    pipelines.appstudio.openshift.io/type: build
  annotations:
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-event: '[pull_request]'
    pipelinesascode.tekton.dev/on-target-branch: '[base-nnlp]'
  ownerreferences: []
  finalizers: []
  managedfields: []
spec:
  pipelineref: null
  pipelinespec:
    description: ""
    resources: []
    tasks:
    - name: appstudio-init
      taskref:
        name: init
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-init:0.1@sha256:f9e8e66798d02afee87ff13c8d5a0d4bb2667c05a7010fbd286a4afa319c7323
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions: []
      retries: 0
      runafter: []
      resources: null
      params:
      - name: image-url
        value:
          type: string
          stringval: $(params.output-image)
          arrayval: []
          objectval: {}
      - name: rebuild
        value:
          type: string
          stringval: $(params.rebuild)
          arrayval: []
          objectval: {}
      - name: skip-checks
        value:
          type: string
          stringval: $(params.skip-checks)
          arrayval: []
          objectval: {}
      - name: pipeline-run-name
        value:
          type: string
          stringval: $(context.pipelineRun.name)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces: []
      timeout: null
    - name: clone-repository
      taskref:
        name: git-clone
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:f4e37778cba00296606ddfbc1c58181330899cafcaa1ee41c75a7cf8bed312f0
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(tasks.appstudio-init.results.build)
        operator: in
        values:
        - "true"
      retries: 0
      runafter:
      - appstudio-init
      resources: null
      params:
      - name: url
        value:
          type: string
          stringval: $(params.git-url)
          arrayval: []
          objectval: {}
      - name: revision
        value:
          type: string
          stringval: $(params.revision)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces:
      - name: output
        workspace: workspace
        subpath: ""
      - name: basic-auth
        workspace: git-auth
        subpath: ""
      timeout: null
    - name: appstudio-configure-build
      taskref:
        name: configure-build
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-configure-build:0.1@sha256:81ac1aca1901c3385cbc8c500b3a69f4a12485e295cb7003fab1f068632cf9b4
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(tasks.appstudio-init.results.build)
        operator: in
        values:
        - "true"
      retries: 0
      runafter:
      - clone-repository
      resources: null
      params: []
      matrix: null
      workspaces:
      - name: source
        workspace: workspace
        subpath: ""
      timeout: null
    - name: prefetch-dependencies
      taskref:
        name: prefetch-dependencies
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-prefetch-dependencies:0.1@sha256:d2f044dc2b9646007c6ae7298fac50971a7a2460e933980313fd689c76226233
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(params.hermetic)
        operator: in
        values:
        - "true"
      retries: 0
      runafter:
      - appstudio-configure-build
      resources: null
      params:
      - name: input
        value:
          type: string
          stringval: $(params.prefetch-input)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces:
      - name: source
        workspace: workspace
        subpath: ""
      timeout: null
    - name: build-container
      taskref:
        name: buildah
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-buildah:0.1@sha256:b80a1051ce11b27907d1785a2ea0cf788e59e96ea7585bf02867d83d78e985a5
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(tasks.appstudio-init.results.build)
        operator: in
        values:
        - "true"
      retries: 0
      runafter:
      - prefetch-dependencies
      resources: null
      params:
      - name: IMAGE
        value:
          type: string
          stringval: $(params.output-image)
          arrayval: []
          objectval: {}
      - name: DOCKERFILE
        value:
          type: string
          stringval: $(params.dockerfile)
          arrayval: []
          objectval: {}
      - name: CONTEXT
        value:
          type: string
          stringval: $(params.path-context)
          arrayval: []
          objectval: {}
      - name: DOCKER_AUTH
        value:
          type: string
          stringval: $(tasks.appstudio-configure-build.results.docker-auth)
          arrayval: []
          objectval: {}
      - name: HERMETIC
        value:
          type: string
          stringval: $(params.hermetic)
          arrayval: []
          objectval: {}
      - name: PREFETCH_INPUT
        value:
          type: string
          stringval: $(params.prefetch-input)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces:
      - name: source
        workspace: workspace
        subpath: ""
      timeout: null
    - name: sanity-inspect-image
      taskref:
        name: sanity-inspect-image
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-sanity-inspect-image:0.1@sha256:1ff8cea8259a415a7ca6de7d47ade692813721653f89166f549e732cecaf2dcf
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      retries: 0
      runafter:
      - build-container
      resources: null
      params:
      - name: IMAGE_URL
        value:
          type: string
          stringval: $(tasks.build-container.results.IMAGE_URL)@$(tasks.build-container.results.IMAGE_DIGEST)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces:
      - name: workspace
        workspace: workspace
        subpath: ""
      timeout: null
    - name: sanity-label-check
      taskref:
        name: sanity-label-check
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-sanity-label-check:0.1@sha256:710e07f1e38d93ac740b056c4bd7a962df5ad1b09cece5923fae0fde47f9fa76
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      retries: 0
      runafter:
      - sanity-inspect-image
      resources: null
      params: []
      matrix: null
      workspaces:
      - name: workspace
        workspace: workspace
        subpath: ""
      timeout: null
    - name: sanity-optional-label-check
      taskref:
        name: sanity-label-check
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-sanity-label-check:0.1@sha256:710e07f1e38d93ac740b056c4bd7a962df5ad1b09cece5923fae0fde47f9fa76
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      retries: 0
      runafter:
      - sanity-inspect-image
      resources: null
      params:
      - name: POLICY_NAMESPACE
        value:
          type: string
          stringval: optional_checks
          arrayval: []
          objectval: {}
      matrix: null
      workspaces:
      - name: workspace
        workspace: workspace
        subpath: ""
      timeout: null
    - name: deprecated-base-image-check
      taskref:
        name: deprecated-image-check
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-deprecated-image-check:0.1@sha256:268fd657c069d12b6b24d8e02ce6f0330e2a02e53dce787724445591a90682cd
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      retries: 0
      runafter: []
      resources: null
      params:
      - name: BASE_IMAGES_DIGESTS
        value:
          type: string
          stringval: $(tasks.build-container.results.BASE_IMAGES_DIGESTS)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces:
      - name: sanity-ws
        workspace: workspace
        subpath: ""
      timeout: null
    - name: clair-scan
      taskref:
        name: clair-scan
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-clair-scan:0.1@sha256:10b191f72ca767c787f0d7f66f46f5ad3117123ee185e8c57b73667358a7b3a6
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      retries: 0
      runafter:
      - build-container
      resources: null
      params:
      - name: image-digest
        value:
          type: string
          stringval: $(tasks.build-container.results.IMAGE_DIGEST)
          arrayval: []
          objectval: {}
      - name: image-url
        value:
          type: string
          stringval: $(tasks.build-container.results.IMAGE_URL)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces: []
      timeout: null
    - name: sast-snyk-check
      taskref:
        name: sast-snyk-check
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-sast-snyk-check:0.1@sha256:e4986a1fdf0a7dbb96514fcbe68267d82ee42676c246fd33af19740f966aed00
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      retries: 0
      runafter:
      - clone-repository
      resources: null
      params: []
      matrix: null
      workspaces:
      - name: workspace
        workspace: workspace
        subpath: ""
      timeout: null
    - name: clamav-scan
      taskref:
        name: clamav-scan
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-clamav-scan:0.1@sha256:2e19ce2503a8471878fe070364066328e4f2912205ee4aaaf9d66a30037d1cb7
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      retries: 0
      runafter:
      - build-container
      resources: null
      params:
      - name: image-digest
        value:
          type: string
          stringval: $(tasks.build-container.results.IMAGE_DIGEST)
          arrayval: []
          objectval: {}
      - name: image-url
        value:
          type: string
          stringval: $(tasks.build-container.results.IMAGE_URL)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces: []
      timeout: null
    - name: sbom-json-check
      taskref:
        name: sbom-json-check
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-sbom-json-check:0.1@sha256:631b875a9e265d48a1f00d21e51560c175bc7aafb4358b6525785d4ecc685d69
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      retries: 0
      runafter:
      - build-container
      resources: null
      params:
      - name: IMAGE_URL
        value:
          type: string
          stringval: $(tasks.build-container.results.IMAGE_URL)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces:
      - name: workspace
        workspace: workspace
        subpath: ""
      timeout: null
    params:
    - name: git-url
      type: string
      description: Source Repository URL
      properties: {}
      default: null
    - name: revision
      type: string
      description: Revision of the Source Repository
      properties: {}
      default:
        type: string
        stringval: ""
        arrayval: []
        objectval: {}
    - name: output-image
      type: string
      description: Fully Qualified Output Image
      properties: {}
      default: null
    - name: path-context
      type: string
      description: The path to your source code
      properties: {}
      default:
        type: string
        stringval: .
        arrayval: []
        objectval: {}
    - name: dockerfile
      type: string
      description: Path to the Dockerfile
      properties: {}
      default:
        type: string
        stringval: Dockerfile
        arrayval: []
        objectval: {}
    - name: rebuild
      type: string
      description: Force rebuild image
      properties: {}
      default:
        type: string
        stringval: "false"
        arrayval: []
        objectval: {}
    - name: skip-checks
      type: string
      description: Skip checks against built image
      properties: {}
      default:
        type: string
        stringval: "false"
        arrayval: []
        objectval: {}
    - name: hermetic
      type: string
      description: Execute the build with network isolation
      properties: {}
      default:
        type: string
        stringval: "false"
        arrayval: []
        objectval: {}
    - name: prefetch-input
      type: string
      description: Build dependencies to be prefetched by Cachi2
      properties: {}
      default:
        type: string
        stringval: ""
        arrayval: []
        objectval: {}
    - name: java
      type: string
      description: Java build
      properties: {}
      default:
        type: string
        stringval: "false"
        arrayval: []
        objectval: {}
    workspaces:
    - name: workspace
      description: ""
      optional: false
    - name: git-auth
      description: ""
      optional: true
    results:
    - name: IMAGE_URL
      type: ""
      description: ""
      value:
        type: string
        stringval: $(tasks.build-container.results.IMAGE_URL)
        arrayval: []
        objectval: {}
    - name: IMAGE_DIGEST
      type: ""
      description: ""
      value:
        type: string
        stringval: $(tasks.build-container.results.IMAGE_DIGEST)
        arrayval: []
        objectval: {}
    - name: CHAINS-GIT_URL
      type: ""
      description: ""
      value:
        type: string
        stringval: $(tasks.clone-repository.results.url)
        arrayval: []
        objectval: {}
    - name: CHAINS-GIT_COMMIT
      type: ""
      description: ""
      value:
        type: string
        stringval: $(tasks.clone-repository.results.commit)
        arrayval: []
        objectval: {}
    - name: JAVA_COMMUNITY_DEPENDENCIES
      type: ""
      description: ""
      value:
        type: string
        stringval: $(tasks.build-container.results.JAVA_COMMUNITY_DEPENDENCIES)
        arrayval: []
        objectval: {}
    finally:
    - name: show-summary
      taskref:
        name: summary
        kind: ""
        apiversion: ""
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-summary:0.1@sha256:245f5017f0a58840212cfd2de0a50844f78b2b2c74976289f34b238bdaa700e5
        resolverref:
          resolver: ""
          params: []
      taskspec: null
      whenexpressions: []
      retries: 0
      runafter: []
      resources: null
      params:
      - name: pipeline-run-name
        value:
          type: string
          stringval: $(context.pipelineRun.name)
          arrayval: []
          objectval: {}
      - name: git-url
        value:
          type: string
          stringval: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
          arrayval: []
          objectval: {}
      - name: image-url
        value:
          type: string
          stringval: $(params.output-image)
          arrayval: []
          objectval: {}
      matrix: null
      workspaces: []
      timeout: null
  resources: []
  params:
  - name: dockerfile
    value:
      type: string
      stringval: docker/Dockerfile
      arrayval: []
      objectval: {}
  - name: git-url
    value:
      type: string
      stringval: '{{repo_url}}'
      arrayval: []
      objectval: {}
  - name: output-image
    value:
      type: string
      stringval: quay.io/redhat-appstudio-qe/test-images:on-pr-{{revision}}
      arrayval: []
      objectval: {}
  - name: path-context
    value:
      type: string
      stringval: .
      arrayval: []
      objectval: {}
  - name: revision
    value:
      type: string
      stringval: '{{revision}}'
      arrayval: []
      objectval: {}
  serviceaccountname: ""
  status: ""
  timeouts: null
  timeout: null
  podtemplate: null
  workspaces:
  - name: workspace
    subpath: ""
    volumeclaimtemplate:
      typemeta:
        kind: ""
        apiversion: ""
      objectmeta:
        name: ""
        generatename: ""
        namespace: ""
        selflink: ""
        uid: ""
        resourceversion: ""
        generation: 0
        creationtimestamp: "0001-01-01T00:00:00Z"
        deletiontimestamp: null
        deletiongraceperiodseconds: null
        labels: {}
        annotations: {}
        ownerreferences: []
        finalizers: []
        managedfields: []
      spec:
        accessmodes:
        - ReadWriteOnce
        selector: null
        resources:
          limits: {}
          requests:
            storage:
              format: BinarySI
          claims: []
        volumename: ""
        storageclassname: null
        volumemode: null
        datasource: null
        datasourceref: null
      status:
        phase: ""
        accessmodes: []
        capacity: {}
        conditions: []
        allocatedresources: {}
        resizestatus: null
    persistentvolumeclaim: null
    emptydir: null
    configmap: null
    secret: null
    projected: null
    csi: null
  - name: git-auth
    subpath: ""
    volumeclaimtemplate: null
    persistentvolumeclaim: null
    emptydir: null
    configmap: null
    secret:
      secretname: '{{ git_auth_secret }}'
      items: []
      defaultmode: null
      optional: null
    projected: null
    csi: null
  taskrunspecs: []
status:
  status:
    observedgeneration: 0
    conditions: []
    annotations: {}
  pipelinerunstatusfields:
    starttime: null
    completiontime: null
    taskruns: {}
    runs: {}
    pipelineresults: []
    pipelinespec: null
    skippedtasks: []
    childreferences: []
    finallystarttime: null
    provenance: null
    spancontext: {}
